<head>
  <title>dae animate</title>
  <script type="text/javascript" src="/javascripts/libs/three.js"></script>

  <script type="text/javascript" src="/javascripts/libs/stats.js"></script>
  <script type="text/javascript" src="/javascripts/libs/dat.gui.js"></script>
  <script type="text/javascript" src="/javascripts/libs/ColladaLoader.js"></script>

  <script
    src="https://code.jquery.com/jquery-2.2.4.min.js"
    integrity="sha256-BbhdlvQf/xTY9gja0Dq3HiwQF8LaCRTXxZKRutelT44="
    crossorigin="anonymous"
  ></script>
  <style>
    body {
      /* set margin to 0 and overflow to hidden, to go fullscreen */
      margin: 0;
      overflow: hidden;
    }
    #control {
      width: 100%;
      text-align: center;
    }

    #control button {
      font-size: 50px;
      height: 100px;
      width: 100px;
    }
  </style>
</head>
<body>
  <div id="Stats-output"></div>
  <!-- Div which will hold the Output -->
  <div id="WebGL-output"></div>
  <span type="text" id="obj-file" data-dae=<%=filename%> >
  <!-- Javascript code that runs our Three.js examples -->
  <script type="text/javascript">
    // once everything is loaded, we run our Three.js stuff.
    let object;

    // create a scene, that will hold all our elements such as objects, cameras and lights.
    var scene = new THREE.Scene();
    // create a camera, which defines where we're looking at.
    camera = new THREE.PerspectiveCamera(
      45,
      window.innerWidth / window.innerHeight,
      1,
      10000
    );
    // create a render and set the size
    var webGLRenderer = new THREE.WebGLRenderer();
    function init() {
      var stats = initStats();

      webGLRenderer.setClearColor(new THREE.Color(0xeeeeee, 1.0));
      webGLRenderer.setSize(window.innerWidth, window.innerHeight);
      webGLRenderer.shadowMapEnabled = true;
      // position and point the camera to the center of the scene
      camera.position.x = 100;
      camera.position.y = -100;
      camera.position.z = 1000;
      camera.lookAt(scene.position);
      // add spotlight for the shadows
      var spotLight = new THREE.SpotLight(0xffffff);
      spotLight.position.set(300, 500, 100);
      spotLight.intensity = 3;
      scene.add(spotLight);
      // add the output of the renderer to the html element
      document.getElementById("WebGL-output").appendChild(webGLRenderer.domElement);
      // call the render function
      var step = 0;
      var meshAnim;
      var clock = new THREE.Clock();
      var loader = new THREE.ColladaLoader();

      let filename = $("#obj-file").data("dae");
      loader.load(`/images/${filename}.dae`, function(collada) {
        var child = collada.skins[0];
        scene.add(child);
        var animation = new THREE.Animation(child, child.geometry.animation);
        animation.play();
        // position the mesh
        child.scale.set(0.15, 0.15, 0.15);

        // child.rotation.x = Math.PI / 2;
        // child.rotation.y = 0;
        // child.rotation.z = 0;

        child.position.z = 0;
        child.position.x = 0;
        child.position.y = 0;
        object = child;
      });
      render();
      function render() {
        stats.update();
        var delta = clock.getDelta();
        THREE.AnimationHandler.update(delta);
        // render using requestAnimationFrame
        requestAnimationFrame(render);
        webGLRenderer.render(scene, camera);
      }

      function initStats() {
        var stats = new Stats();
        stats.setMode(0); // 0: fps, 1: ms
        // Align top-left
        stats.domElement.style.position = "absolute";
        stats.domElement.style.left = "0px";
        stats.domElement.style.top = "0px";
        document.getElementById("Stats-output").appendChild(stats.domElement);
        return stats;
      }
      var renderScene = new function renderScene() {
        requestAnimationFrame(renderScene);
        // object animation
        var speed = 1;
        // camera.position.x += Math.cos(speed) * 10;
        // camera.position.z -= Math.sin(speed) * 10;

        // camera.lookAt(scene.position); //0,0,0
        webGLRenderer.render(scene, camera);
      }();
    }

    window.onload = init;

    // $(document).ready(() => {
    //   setInterval(() => {
    //     object.rotation.z += 290;
    //     webGLRenderer.render(scene, camera);
    //   }, 1000);
    // });

    // function render() {
    //using timer as animation
    // }

    // $("#control").click(() => {
    //   // camera.position.z = 0;
    //   // camera.position.x += Math.PI / 2;
    //   // camera.position.y += 300;

    //   object.rotation.z += 290;
    //   // object.rotation.x += 100;
    //   // object.rotation.y += 100;

    //   webGLRenderer.render(scene, camera);
    // });
  </script>
</body>
